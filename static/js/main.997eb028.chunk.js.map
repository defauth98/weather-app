{"version":3,"sources":["services/api.ts","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","headers","App","useState","city","setCity","fellsLike","setFellsLike","temperature","setTemperature","cityResponse","setCityResponse","minTemperature","setMinTemperature","maxTemperature","setMaxTemperature","humidity","setHumidity","pressure","setPressure","weather","setWeather","icon","setIcon","monday","setMonday","tuesday","setTuesday","wednesday","setWednesday","thursday","setThursday","friday","setFriday","handleSearchForWeather","a","get","params","q","units","response","data","list","console","log","name","Number","main","feels_like","toFixed","temp","temp_max","temp_min","description","useEffect","className","type","onChange","e","target","value","placeholder","onClick","color","size","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.997eb028.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://community-open-weather-map.p.rapidapi.com',\n  headers: {\n    'x-rapidapi-key': 'ce2d682f64msh6a101bcc3f3e384p1465e4jsnedad5bbbc311',\n    'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n  },\n});\n\nexport default api;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\n\nimport api from './services/api';\n\nimport { FiSearch } from 'react-icons/fi';\nimport { TiWeatherStormy } from 'react-icons/ti';\nimport { ImArrowUp, ImArrowDown } from 'react-icons/im';\n\nimport './styles/pages/main-page.css';\n\ninterface weekDay {\n  main: {\n    temp_max: string;\n    temp_min: string;\n  };\n  weather: [{ main: string }];\n}\n\nfunction App() {\n  const [city, setCity] = useState('london');\n  const [fellsLike, setFellsLike] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [cityResponse, setCityResponse] = useState('');\n  const [minTemperature, setMinTemperature] = useState('');\n  const [maxTemperature, setMaxTemperature] = useState('');\n  const [humidity, setHumidity] = useState('');\n  const [pressure, setPressure] = useState('');\n  const [weather, setWeather] = useState('');\n  const [icon, setIcon] = useState('');\n\n  const [monday, setMonday] = useState<weekDay>();\n  const [tuesday, setTuesday] = useState<weekDay>();\n  const [wednesday, setWednesday] = useState<weekDay>();\n  const [thursday, setThursday] = useState<weekDay>();\n  const [friday, setFriday] = useState<weekDay>();\n\n  useEffect(() => {\n    handleSearchForWeather()\n  }, [])\n\n  async function handleSearchForWeather() {\n    const response = await api.get('find', {\n      params: { q: city, units: 'metric' },\n    });\n\n    const data = response.data.list[0];\n\n    console.log(response.data.list[0].weather[0]);\n\n    setMonday(response.data.list[0]);\n    setTuesday(response.data.list[1]);\n    setWednesday(response.data.list[2]);\n    setThursday(response.data.list[3]);\n    setFriday(response.data.list[4]);\n\n    setCityResponse(data.name);\n    setFellsLike(Number(data.main.feels_like).toFixed(0));\n    setTemperature(Number(data.main.temp).toFixed(0));\n\n    setMaxTemperature(Number(data.main.temp_max).toFixed(0));\n    setMinTemperature(Number(data.main.temp_min).toFixed(0));\n\n    setHumidity(Number(data.main.humidity).toFixed(0));\n    setPressure(Number(data.main.pressure).toFixed(0));\n\n    setWeather(data.weather[0].description);\n    setIcon(data.weather[0].icon);\n  }\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"search-box\">\n        <input\n          type=\"text\"\n          onChange={(e) => setCity(e.target.value)}\n          placeholder=\"search by city\"\n          value={city}\n        />\n        <button onClick={handleSearchForWeather}>\n          <FiSearch color=\"black\" size=\"40\" />\n        </button>\n      </div>\n\n      <div className=\"current-weather\">\n        <div className=\"current-day\">\n          <h2>Current weather</h2>\n          <h3>{cityResponse}</h3>\n\n          <div className=\"weather\">\n            <img\n              src={`https://openweathermap.org/img/wn/${icon}@2x.png`}\n              alt=\"weather-condition\"\n            />\n            <span>{temperature}º</span>\n          </div>\n\n          <span>{weather}</span>\n        </div>\n\n        <div className=\"current-info\">\n          <span>Fells like {fellsLike}º</span>\n          <div className=\"temperature\">\n            <div className=\"max\">\n              <ImArrowUp />\n              {maxTemperature}º\n            </div>\n            <div className=\"min\">\n              <ImArrowDown />\n              {minTemperature}º\n            </div>\n          </div>\n          <div className=\"infos\">\n            <span>\n              Humidity <strong>{humidity}%</strong>\n            </span>\n            <span>\n              Presure <strong>{pressure}hPa</strong>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"week-info\">\n        <h2>Extended Forecast</h2>\n\n        <div className=\"week-days\">\n          <div className=\"day\">\n            <span>Mon</span>\n            <TiWeatherStormy color=\"white\" size=\"20\" />\n            <span>{`${monday?.weather[0].main}`}</span>\n            <span>{`${monday?.main.temp_max}º/${monday?.main.temp_min}º`}</span>\n          </div>\n          <div className=\"day\">\n            <span>Tue</span>\n            <TiWeatherStormy color=\"white\" size=\"20\" />\n            <span>{`${tuesday?.weather[0].main}`}</span>\n            <span>{`${tuesday?.main.temp_max}º/${tuesday?.main.temp_min}º`}</span>\n          </div>\n          <div className=\"day\">\n            <span>Wed</span>\n            <TiWeatherStormy color=\"white\" size=\"20\" />\n            <span>{`${wednesday?.weather[0].main}`}</span>\n            <span>{`${wednesday?.main.temp_max}º/${wednesday?.main.temp_min}º`}</span>\n          </div>\n          <div className=\"day\">\n            <span>Thur</span>\n            <TiWeatherStormy color=\"white\" size=\"20\" />\n            <span>{`${thursday?.weather[0].main}`}</span>\n            <span>{`${thursday?.main.temp_max}º/${thursday?.main.temp_min}º`}</span>\n          </div>\n          <div className=\"day\">\n            <span>Fri</span>\n            <TiWeatherStormy color=\"white\" size=\"20\" />\n            <span>{`${friday?.weather[0].main}`}</span>\n            <span>{`${friday?.main.temp_max}º/${friday?.main.temp_min}º`}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'dotenv/config';\n\nimport './styles/global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}